<!-- 
  $RCSfile: edge_from_nodes.xml,v $
  $Revision: 1.2 $
  $Author: langer $
  $Date: 2009-10-16 22:11:39 $

  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@ctcms.nist.gov.
-->

  <para>
    <classname>EdgeFromNodes</classname> is a <xref
    linkend="RegisteredClass-BoundaryConstructor"/>, used as the
    <varname>constructor</varname> argument of the <xref
    linkend="MenuItem-OOF.Skeleton.Boundary.Construct"/> command when
    building &skel; <link
    linkend="Section-Concepts-Skeleton-Boundary">boundaries</link>.
    It creates <link
    linkend='Section-Concepts-Skeleton-Boundary-Edge'>Edge
    Boundaries</link> from the currently <link
    linkend='MenuItem-OOF.SegmentSelection'>selected</link> &skel;
    &nodes; or from a <link
    linkend='Section-Concepts-Skeleton-Groups'>group</link> of
    &nodes;.  The &nodes; are specified by the
    <varname>group</varname> parameter, which must be either the name
    of a &node; group or the special <xref
    linkend="Object-Placeholder"/> object,
    <userinput>selection</userinput>.
  </para>
  <para>
    Edge boundaries must be constructed from a single contiguous
    non-branching set of &sgmts;.  Not all sets of &nodes; uniquely
    define a set of &sgmts;.  If more than one set of &sgmts; can be
    constructed from set of &nodes;, &oof2; chooses the set that
    encloses the most &elems;.  See <xref
      linkend="Figure-edge_from_nodes"/> for examples.
  </para>
  <para>
    Edge boundaries must be <emphasis>directed</emphasis>. <link
    linkend="Section-Concepts-Mesh-BoundaryCondition">Boundary
    conditions</link> use the direction to determine the boundary
    normal and the direction of applied &fields; and &fluxes;.  The
    <varname>direction</varname> parameter specifies the direction of
    the boundary being created.  The legal values for
    <varname>direction</varname> depend on the topology of the
    boundary being constructed.  When the &sgmts; form a closed loop,
    the legal values are <userinput>'Clockwise'</userinput> and
    <userinput>'CounterClockwise'</userinput>.  When the &sgmts; form
    an open line or curve, the values are <userinput>'Left to
    right'</userinput>, <userinput>'Right to left'</userinput>,
    <userinput>'Top to bottom'</userinput>, and <userinput>'Bottom to
    top'</userinput>.  &oof2; compares the positions of only the first
    and last &nodes; when determining the direction of an open
    boundary.
  </para>


  <figure id="Figure-edge_from_nodes">
    <title>Constructing an Edge Boundary from Nodes</title>
    <mediaobject>
      <imageobject>
	<imagedata format="PNG"
	  fileref="FIGURES/skel_boundary/edge_from_nodes0.png"/>
      </imageobject>
      <imageobject>
	<imagedata format="EPS"
	  fileref="FIGURES/skel_boundary/edge_from_nodes0.eps"/>
      </imageobject>
      <caption>
	<para>
	  Selected &nodes; (large blue dots) in a &skel;.
	</para>
      </caption>
    </mediaobject>
    <mediaobject>
      <imageobject>
	<imagedata format="PNG"
	  fileref="FIGURES/skel_boundary/edge_from_nodes1.png"/>
      </imageobject>
      <imageobject>
	<imagedata format="EPS"
	  fileref="FIGURES/skel_boundary/edge_from_nodes1.eps"/>
      </imageobject>
      <caption>
	<para>
	  A counterclockwise boundary constructed from the selected
	  &nodes;, using <xref
	  linkend="MenuItem-OOF.Skeleton.Boundary.Construct"/>(<varname>skeleton</varname>=<userinput>'micro:skeleton'</userinput>,
	  <varname>name</varname>=<userinput>'boundary&lt;3&gt;'</userinput>,
	  <varname>constructor</varname>=<xref
	  linkend="RegisteredClass-EdgeFromNodes"/>(<varname>group</varname>=<userinput>selection</userinput>,<varname>direction</varname>=<userinput>'Counterclockwise'</userinput>)).
	  The &nodes; formed a well defined boundary.
	</para>
      </caption>
    </mediaobject>
    <mediaobject>
      <imageobject>
	<imagedata format="PNG"
	  fileref="FIGURES/skel_boundary/edge_from_nodes2.png"/>
      </imageobject>
      <imageobject>
	<imagedata format="EPS"
	  fileref="FIGURES/skel_boundary/edge_from_nodes2.eps"/>
      </imageobject>
      <caption>
	<para>
	  Adding a single &node; to the selection makes it impossible
	  to define a set of &sgmts;.  No boundary can be constructed.
	</para>
      </caption>
    </mediaobject>
    <mediaobject>
      <imageobject>
	<imagedata format="PNG"
	  fileref="FIGURES/skel_boundary/edge_from_nodes3.png"/>
      </imageobject>
      <imageobject>
	<imagedata format="EPS"
	  fileref="FIGURES/skel_boundary/edge_from_nodes3.eps"/>
      </imageobject>
      <caption>
	<para>
	  Adding yet another &node; to the selection makes it possible
	  to define a boundary again.
	</para>
      </caption>
    </mediaobject>
    <mediaobject>
      <imageobject>
	<imagedata format="PNG"
	  fileref="FIGURES/skel_boundary/edge_from_nodes4.png"/>
      </imageobject>
      <imageobject>
	<imagedata format="EPS"
	  fileref="FIGURES/skel_boundary/edge_from_nodes4.eps"/>
      </imageobject>
      <caption>
	<para>
	  This set of &nodes; defines a single
	  <emphasis>open</emphasis> set of &sgmts;.  A boundary can be
	  constructed with <xref
	  linkend="MenuItem-OOF.Skeleton.Boundary.Construct"/>(<varname>skeleton</varname>=<userinput>'micro:skeleton'</userinput>,
	  <varname>name</varname>=<userinput>'boundary&lt;8&gt;'</userinput>,
	  <varname>constructor</varname>=<xref linkend="RegisteredClass-EdgeFromNodes"/>(<varname>group</varname>=<userinput>selection</userinput>,<varname>direction</varname>=<userinput>'Left to right'</userinput>)).
	</para>
      </caption>
    </mediaobject>
  </figure>


  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("../../man_oof2.xml" "book" "chapter" "refentry" "refsect1")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
  -->
