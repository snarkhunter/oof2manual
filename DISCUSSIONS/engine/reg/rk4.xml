<!-- 
  $RCSfile: rk4.xml,v $
  $Revision: 1.1 $
  $Author: langer $
  $Date: 2011-04-27 21:32:31 $

  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@nist.gov.
-->

<para>
  <classname>RK4</classname> is a <xref
  linkend="RegisteredClass-TimeStepper"/> that implements the classic
  <ulink role="external"
  url="http://en.wikipedia.org/wiki/Runge%E2%80%93Kutta_methods">fourth
  order Runge-Kutta</ulink> method for solving ordinary differential
  equations.  The error on each step is of order <inlineequation><alt
  role="tex">\(\Delta t^5\)</alt></inlineequation>. 
</para>
<para>
  Given a vector <inlineequation><alt
  role="tex">\(\phi_n\)</alt></inlineequation> of unknowns
  (<foreignphrase>i.e.</foreignphrase> &field; values in &oof2;) at
  time <inlineequation><alt role="tex">\(t_n\)</alt></inlineequation>,
  and the first order differential equation
  <equation>
    <alt role="tex">
      \[ \frac{d\phi}{dt} = f(\phi, t) \]
    </alt>
  </equation>
  the fourth order Runge-Kutta estimate for <inlineequation><alt
  role="tex">\(\phi_{n+1}\)</alt></inlineequation> is given by
  <equation id="Eqn-RK4">
    <alt role="tex">
      \begin{align*}
      k_1 &amp;= \Delta t f(\phi_n, t_n) \\
      k_2 &amp;= \Delta t f(\phi_n+\frac{k_1}{2}, t_n+\frac{\Delta t}{2}) \\
      k_3 &amp;= \Delta t f(\phi_n+\frac{k_2}{2}, t_n+\frac{\Delta t}{2}) \\
      k_4 &amp;= \Delta t f(\phi_n+k_3, t_n+\Delta t) \\
      \phi_{n+1} &amp;= \phi_n + \frac{k_1}{6} + \frac{k_2}{3} + \frac{k_3}{3}
      + \frac{k_4}{6}
      \end{align*}
    </alt>
  </equation>
  where <inlineequation><alt role="tex">\(\Delta t =
  t_{n+1}-t_n\)</alt></inlineequation>.
</para>
<para>
  <classname>RK4</classname> can be applied to second order equations
  by using equation <xref linkend="Eqn-Augmented"/>. 
</para>
<para>
  Because the method is explicit (<inlineequation><alt
  role="tex">\(\phi_{n+1}\)</alt></inlineequation> doesn't appear as an
  argument to <inlineequation><alt
  role="tex">\(f\)</alt></inlineequation>), equation <xref
  linkend="Eqn-RK4"/> doesn't require a <link
  linkend="RegisteredClass-NonlinearSolverBase">nonlinear
  solver</link> even if <inlineequation><alt
  role="tex">\(f\)</alt></inlineequation> is nonlinear.
</para>

  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("../../../man_oof2.xml" "book" "chapter" "refentry" "refsect1")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
  -->
