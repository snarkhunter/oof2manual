<!-- 
  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@nist.gov.
-->

<para>
  The <ulink url="http://en.wikipedia.org/wiki/Crank_Nicolson"
  role="external">Crank-Nicolson method</ulink> is a method of
  numerically integrating ordinary differential equations.  It is
  second order in time, meaning that it makes an error only of order
  <inlineequation><alt role="tex">\( (\Delta t)^3 \)
  </alt></inlineequation> on each step, and is more accurate and more
  stable than the <xref linkend="RegisteredClass-ForwardEuler"/>
  method, but it is more expensive to compute.
</para>
<para>
  Given a vector <inlineequation><alt
  role="tex">\(\phi_n\)</alt></inlineequation> of unknowns
  (<foreignphrase>i.e.</foreignphrase> &field; values in &oof2;) at
  time <inlineequation><alt role="tex">\(t_n\)</alt></inlineequation>,
  and the first order differential equation
  <equation>
    <alt role="tex">
      \[ \frac{d\phi}{dt} = f(\phi, t) \]
    </alt>
  </equation>
  the Crank-Nicolson estimate for <inlineequation><alt
  role="tex">\(\phi_{n+1}\)</alt></inlineequation> is
  <equation id="Eqn-CrankNicolson">
    <alt role="tex"> 
      \[ \phi_{n+1} = \phi_n +
      \frac12 \Delta t \left[f(\phi_n, t_n)  + f(\phi_{n+1},t_{n+1})\right]
      \]
    </alt>
  </equation>
  where <inlineequation><alt role="tex">\( \Delta t = t_{n+1}-t_n
  \)</alt></inlineequation>.  The need to solve equation <xref
  linkend="Eqn-CrankNicolson"/> for <inlineequation><alt
  role="tex">\(\phi_{n+1}\)</alt></inlineequation>, which appears on
  both sides, makes <classname>CrankNicolson</classname> a
  <emphasis>semi-implicit</emphasis> method, requiring more CPU time than
  an explicit method such as <xref
  linkend="RegisteredClass-ForwardEuler"/>, especially when
  <inlineequation><alt role="tex">\(f\)</alt></inlineequation> is
  nonlinear.
</para>
<para>
   <classname>CrankNicolson</classname> can be applied to equations
   with second order time derivatives via equation <xref
   linkend="Eqn-Augmented"/>.
</para>
<refsect2 id="Section-GeneralizedEuler">
  <title>Generalized Euler Methods</title>
  <para>
    <classname>CrankNicolson</classname> is an example of a
    <emphasis>Generalized Euler</emphasis> method, which is a
    combination of the <xref linkend="RegisteredClass-ForwardEuler"/>
    and <xref linkend="RegisteredClass-BackwardEuler"/> methods:
    <equation id="Eqn-GeneralizedEuler">
      <alt role="tex">
	\[ \phi_{n+1} = \phi_n +
	\Delta t \left[ (1-\theta)f(\phi_n,t_n) + \theta f(\phi_{n+1},t_{n+1})
	\right]
	\]
      </alt>
    </equation>
    where <inlineequation><alt
    role="tex">\(\theta\)</alt></inlineequation> is a number between 0
    and 1.  <inlineequation><alt
    role="tex">\(\theta=0\)</alt></inlineequation> gives the fully
    explicit <xref linkend="RegisteredClass-ForwardEuler"/>
    method. <inlineequation><alt
    role="tex">\(\theta=1\)</alt></inlineequation> gives the fully
    implicit <xref linkend="RegisteredClass-BackwardEuler"/> method.
    Intermediate values give semi-implicit methods, such as <xref
    linkend="RegisteredClass-CrankNicolson"/> (<inlineequation><alt
    role="tex">\(\theta=0.5\)</alt></inlineequation>).
  </para>
  <para>
    The error in the generalized Euler methods is of order
    <inlineequation><alt role="tex">\( (\Delta t)^2 \)
    </alt></inlineequation>, except for <xref
    linkend="RegisteredClass-CrankNicolson"/>, which is
    <inlineequation><alt role="tex">\( (\Delta t)^3 \)
    </alt></inlineequation>.
  </para>
</refsect2>


  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("../../../man_oof2.xml" "book" "chapter" "refentry" "refsect1")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
  -->
