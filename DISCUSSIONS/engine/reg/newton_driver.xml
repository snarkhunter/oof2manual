<!-- 
  $RCSfile: newton_driver.xml,v $
  $Revision: 1.3 $
  $Author: langer $
  $Date: 2011-04-08 20:00:02 $

  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@ctcms.nist.gov.
-->

<obsolete>OBSOLETE</obsolete>

  <para>
    <classname>NewtonDriver</classname> is a <xref
    linkend="RegisteredClass-Driver"/> object, used as the
    <varname>solver</varname> argument to the <xref
    linkend="MenuItem-OOF.Solver"/> command. It uses the
    Newton-Raphson method, applying the given linear
    <varname>method</varname> repeatedly to find a solution of the
    <emphasis>non-linear</emphasis> <link
    linkend="MenuItem-OOF.Mesh.Equation.Activate">active</link>
    &equations; that are defined on the &mesh;.
  </para>
  <para>
    The Newton-Raphson method solves the equation
    <inlineequation>
      <alt role="tex">\(A(x)x=b\)</alt>
    </inlineequation>
    by defining
    <inlineequation>
      <alt role="tex">\(f(x)=Ax-b\)</alt>
    </inlineequation>. Starting at a point
    <inlineequation>
      <alt role="tex">\(x_0\)</alt>
    </inlineequation>, it computes an
    increment <inlineequation>
      <alt role="tex">\(\delta x\)</alt>
    </inlineequation> by solving the linear system
    <equation>
      <alt role="tex">
	\[ A(x_0)\delta x = b - A(x_0)x_0 \]
      </alt>
    </equation>
    Then a new approximation <inlineequation>
      <alt role="tex">\(x_1\)</alt>
    </inlineequation>
    is given by
    <equation>
      <alt role="tex">\[x_1=x_0+\delta x\]</alt>
    </equation>
    and the procedure repeats itself.
  </para>
  <para>
    The best <varname>method</varname> depends on the problem being
    solved.  Some solvers, such as <link
    linkend="RegisteredClass-CGSolver">conjugate gradient</link>, only
    work on symmetric matrices.  &oof2; notices when a problem is
    asymmetric and won't allow the wrong kind of solver to be applied.
  </para>
  <para>
    The Newton-Raphson iteration halts when the normalized residual is
    less than the given <varname>newton_tolerance</varname>.  The
    normalized residual at
    <inlineequation>
      <alt role="tex">\(x=x_n\)</alt>
    </inlineequation> is
    <inlineequation>
      <alt role="tex">\( |Ax_n-b|/|b| \)</alt>
    </inlineequation>.
    A smaller tolerance requires more iterations but gives a more
    precise result.
  </para>
  <para>
    <varname>newton_max_iterations</varname> is the maximum number of
    Newton-Raphson iterations that will be taken, whether or not the
    tolerance is satisfied.
  </para>
  


  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("../../../man_oof2.xml" "book" "chapter" "refentry" "refsect1")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
  -->
