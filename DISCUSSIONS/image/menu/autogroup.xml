<!-- 
  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@ctcms.nist.gov.
-->

<para>
  If a &micro; is being built from an &image; which has a one-to-one
  correspondence between pixel color and &material;, then the most
  convenient way to assign &materials; to pixels is to automatically
  create a &pixelgroup; for each color, and then to <link
  linkend="MenuItem-OOF.Material.Assign">assign</link> &materials; to
  the pixels in each pixel group.  The <command>AutoGroup</command>
  command performs the first part of this process, creating pixel
  groups for each color of pixel in the given &image;. 
</para>
<para>
  The <varname>name_template</varname> parameter specifies how the
  names for the automatically created groups will be generated.  It
  should be a string containing either <userinput>%c</userinput> or
  <userinput>%n</userinput> or both.  When naming a group,
  <userinput>%c</userinput> will be replaced by the color of the
  pixels in the group, and <userinput>%n</userinput> will be replaced
  by an integer. The colors are written in the slightly uncomfortable
  but compact form <userinput>#RRGGBB</userinput>, where
  <userinput>RR</userinput>, <userinput>GG</userinput>, and
  <userinput>BB</userinput> are the hexadecimal values of the 8-bit
  RGB color channels.  It may be advisable to manually <link
  linkend="MenuItem-OOF.PixelGroup.Rename">rename</link> the groups.
</para>
<para>
  This command operates on all pixels in the &image;, not just the
  <link
  linkend="Section-Concepts-Microstructure-ActiveArea">active</link>
  ones.
</para>

<caution>
  <para>
    This command does not work well on noisy experimental micrographs,
    because pixels whose colors differ only due to noise will be put
    into different groups.  It also doesn't work well on artifical
    micrographs produced by drawing programs, if the programs use
    antialiasing to smooth lines and boundaries.  Even if an
    antialiased image appears to contain only a few colors, it will
    generally have many slightly different colors at the borders
    between regions, and <command>AutoGroup</command> will create a
    large number of small groups.
  </para>
  <para>
    Better ways of creating pixel groups from noisy or antialiased
    images are
    <itemizedlist>
      <listitem>
        <para>
          Select pixels with a tool such as <xref
          linkend="MenuItem-OOF.PixelSelection.Color_Range"/> and assign
          them to a group manually with <xref
          linkend="MenuItem-OOF.PixelGroup.AddSelection"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Use <xref linkend="MenuItem-OOF.PixelGroup.AutoGroup"/> (the
          <guibutton>Auto</guibutton> button on the <link
          linkend="Section-Tasks-Microstructure">Microstructure
          page</link>), which groups similarly colored pixels without
          requiring that they be identical.
        </para>
      </listitem>
      <listitem>
        Create a clean image (<foreignphrase>i.e,</foreignphrase> one
        with exactly one color per material) using the segmenting
        tools in other image processing packages, load the clean image
        into &oof2;, and then use <command>AutoGroup</command> on it.
      </listitem>
    </itemizedlist>
  </para>
</caution>

<!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("../../../man_oof2.xml" "book" "chapter" "refentry" "refsect1")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
-->
