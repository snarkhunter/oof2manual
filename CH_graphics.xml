<!--
  $RCSfile: CH_graphics.xml,v $
  $Revision: 1.4 $
  $Author: langer $
  $Date: 2011-04-15 21:12:40 $

  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@ctcms.nist.gov.
-->

<!-- TODO: Add discussion of <topmost> (and other proxies?) when
     defining graphics layers.
-->

<chapter id="Chapter-Graphics">
  <title>The Graphics Window</title>
  
  <para>
    The Graphics Window provides visual output from &oof2;, and is the
    home of all operations that require user interaction with
    graphical representations of &micros;, &images;, &skels;, and
    &meshes;.
  </para>
  <para>
    <xref linkend="Figure-Graphics"/> shows the structure of the
    Graphics Window.  It consists of five main panes:
    <itemizedlist>
      <listitem>
	    <para>
	      The <emphasis>Canvas</emphasis> is where &oof2; draws
	      &micros;, &meshes;, and everything else.
	    </para>
      </listitem>
      <listitem>
	    <para>
	      The <link linkend="Section-Graphics-Time"><emphasis>Time
	      Controls</emphasis></link> display and change the time of
	      the &micros; displayed on the Canvas.
	    </para>
      </listitem>
      <listitem>
	    <para>
	      The <link
	      linkend="Section-Graphics-Toolboxes"><emphasis>Toolbox</emphasis></link>
	      to the left of the Canvas controls how &oof2; responds to
	      mouse clicks on the Canvas.  The Toolbox also displays
	      information in response to mouse clicks.  &oof2; contains
	      many <link linkend="Section-Graphics-Toolboxes">different
	      Toolboxes</link>.  The Toolbox Chooser at the top of the
	      Toolbox pane switches between them.
	    </para>
      </listitem>
      <listitem>
	    <para>
	      The <link linkend="Section-Graphics-LayerList">Layer
	      List</link> at the bottom of the window lists the contents
	      of the Canvas.  It also provides a quick way of turning
	      different parts of the display on and off.
	    </para>
      </listitem>
      <listitem>
	    <para>
	      The <link linkend="Section-Graphics-ContourMap">Contour
	      Map</link> to the right of the Canvas displays the colors
	      used in contour plots.
	    </para>
      </listitem>
    </itemizedlist>
    The menu bar at the top of the window contains commands that
    adjust the behavior of the window and provide alternate ways of
    performing some basic tasks.  The menu items are described at
    <xref linkend="MenuItem-OOF.Graphics_n.File"/>, <xref
    linkend="MenuItem-OOF.Graphics_n.Layer"/>, and <xref
    linkend="MenuItem-OOF.Graphics_n.Settings"/>.
  </para>
  <figure id="Figure-Graphics">
    <title>The Graphics Window</title>
    <mediaobject>
      <imageobject>
	    <imagedata fileref="FIGURES/gfx/gfxwindow.png" format="PNG"/>
      </imageobject>
    </mediaobject>
  </figure>
  
  <section id='Section-Graphics-Layer'>
    <title>Layers</title>
    <para>
      The objects displayed in the Canvas are arranged in
      <emphasis>Layers</emphasis>.  Each &layer; obscures the layers
      below it, and is obscured by the &layer; above it (although they
      can be transparent too). Each &layer; displays some aspect of a
      single &oof2; object, either a &micro;, &image;, &skel;, or
      &mesh;.  Which objects are displayed automatically can be
      controlled by the <link
      linkend="MenuItem-OOF.Graphics_n.Settings.New_Layer_Policy"><guimenuitem>New
      Layer Policy</guimenuitem></link> command in the graphics
      window's <link
      linkend="MenuItem-OOF.Graphics_n.Settings"><guimenu>Settings</guimenu></link>
      menu.  (Some utility layers, such as those that display selected
      objects, are always created automatically.)
    </para>
    <para>
      Each &layer; is drawn on the Canvas by a <xref
      linkend="RegisteredClass-DisplayMethod"/> object.  The
      documentation for <xref
      linkend="RegisteredClass-DisplayMethod"/> lists all of the <xref
      linkend="RegisteredClass-DisplayMethod"/> subclasses, and
      indicates which types of object each subclass can draw.  
    </para>
    <para id="canonicallayerordering">
      When new &layers; are added to a Canvas, &oof2; attempts to
      insert them so as to minimize the amount of useful information
      that each &layer; obscures in the &layers; below it.  &layers;
      containing sets of points are drawn above &layers; containing
      sets of lines, and &layers; containing lines are drawn above
      &layers; containing filled polygons or bitmapped &images;.  This
      ordering can be changed by explicitly moving &layers; around in
      the <link linkend="Section-Graphics-LayerList">Layer
      List</link>.
    </para>
    <section id="Section-Graphics-New-Layer-Policy">
      <title>The New Layer Policy</title>
      <para>
        When a new object, such as an &image; or &skel; is created,
        &oof2; needs to know whether or not to create a new Layer to
        display it in the graphics window.  Previous versions of
        &oof2; had a confusing policy governing which objects would be
        displayed and when.  To avoid confusion, the default policy is
        now unambiguous and easy to explain:
        <warning>
          <simpara>
            Nothing is displayed unless you request that it be
            displayed.
          </simpara>
        </warning>
      </para>
      <para>
        You can set the policy to one of these values:
        <itemizedlist>
          <listitem>
            <simpara>
              <emphasis>Never</emphasis> is the default. New items are
              not displayed automatically.  To add items to a graphics
              window, use the <xref
              linkend="MenuItem-OOF.Graphics_n.Layer.New"/> menu item.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <emphasis>Always</emphasis> is the opposite of
              Never. New items are always displayed in all graphics
              windows.  Images will be displayed as bitmaps.  &skels;
              and &meshes; will be displayed by their edges.  This
              probably isn't very useful if you have a lot of objects.
            </simpara>
          </listitem>
          <listitem>
            <simpara>
              <emphasis>Single</emphasis> is the most like the earlier
              behavior.  Objects will be automatically displayed in an
              existing graphics window but only if the window doesn't
              already contain a similar object.  Each window can
              contain one &image;, one &skel;, and so forth.
            </simpara>
          </listitem>
        </itemizedlist>
      </para>
      <para>
        The policy can be changed in two places. The menu item <xref
        linkend="MenuItem-OOF.Settings.Graphics_Defaults.New_Layer_Policy"/>
        in the main &oof2; window will change it for all new graphics
        windows, but won't affect windows that are already open.  To
        change the behavior of an open graphics window, use <xref
        linkend="MenuItem-OOF.Graphics_n.Settings.New_Layer_Policy"/>
        in the window's menu bar.
      </para>
    </section>
  </section>

  <section id="Section-Graphics-LayerList">
    <title>The Layer List</title>
    <para>
      The Layer List at the bottom of the Graphics Window contains one
      line for each &layer; in the window.  The &layers; are listed in
      the opposite of the order in which they're drawn, so that the
      layers drawn <emphasis>last</emphasis> are at the top of the
      list. That is, &layers; that are conceptually at the top of the
      display, obscuring the &layers; below them, are listed at the
      top of the Layer List.  
    </para>
    <para>
      <xref linkend="Figure-LayerList"/> illustrates the components of
      the Layer List.  Each line corresponds to a single &layer;, and
      is made up of the following columns:
      <itemizedlist>
	    <listitem>
	      <formalpara>
            <title>Show</title>
            <para>
	          A check button controlling whether or not the layer is
	          actually drawn.  If it's checked, the &layer; is drawn
	          on the canvas.  If it's not checked, the &layer; is
	          invisible.  Toggling the button invokes the <link
	          linkend="MenuItem-OOF.Graphics_n.Layer.Hide"><command>Hide</command></link>
	          and <link
	          linkend="MenuItem-OOF.Graphics_n.Layer.Show"><command>Show</command></link>
	          commands in the <link
	          linkend="MenuItem-OOF.Graphics_n.Layer"><guilabel>Layer</guilabel></link>
	          menu.
	        </para>
          </formalpara>
	    </listitem>
        <listitem>
          <formalpara>
            <title>Freeze</title>
            <para>
              When this check button is checked, the layer will not be
              automatically updated.  Use this to display a &mesh; at
              two different times, for example.  Toggling the button
              invokes the <link
              linkend="MenuItem-OOF.Graphics_n.Layer.Freeze"><command>Freeze</command></link>
              and
              <link
                  linkend="MenuItem-OOF.Graphics_n.Layer.Unfreeze"><command>Unfreeze</command></link>
              commands in the <link
              linkend="MenuItem-OOF.Graphics_n.Layer"><guilabel>Layer</guilabel></link> menu.
            </para>
          </formalpara>
        </listitem>
        <listitem>
          <formalpara>
            <title>What</title>
	        <para>
	          The class (&image;, &mesh;,
	          <foreignphrase>etc.</foreignphrase>) and name (in
	          parentheses) of the object being displayed.
	        </para>
          </formalpara>
	    </listitem>
	    <listitem>
          <formalpara>
            <title>How</title>
	        <para>
	          How the object is being displayed.  This is the name of
	          the &layer;'s <xref
	          linkend="RegisteredClass-DisplayMethod"/>.  The amount
	          of extra detail provided for the <xref
	          linkend="RegisteredClass-DisplayMethod"/> depends on the
	          setting of the <link
	          linkend="MenuItem-OOF.Graphics_n.Settings.Long_Layer_Names"><command>Long
	          Layer Names</command></link> entry in the <xref
	          linkend="MenuItem-OOF.Graphics_n.Settings"/> menu.
	        </para>
          </formalpara>
	    </listitem>
      </itemizedlist>
    </para>
    <figure id="Figure-LayerList">
      <title>The Layer List</title>
      <mediaobject>
	    <imageobject>
	      <imagedata fileref="FIGURES/gfx/layerlist.png" format="PNG"/>
	    </imageobject>
      </mediaobject>
    </figure>
    <para>
      Clicking on an entry in the Layer List (but not on one of the
      buttons in it) selects that &layer; for further processing by
      commands in the Graphics Window's <link
      linkend="MenuItem-OOF.Graphics_n.Layer"><command>Layer</command></link>
      menu.  Control-clicking<footnote><simpara>Maybe command
      clicking.  This seems to be system
      dependent.</simpara></footnote> on a selected &layer; will
      deselect it.
    </para>
    <para>
      To rearrange the order of the &layers; in the list, select a
      layer and use the <link
      linkend="MenuItem-OOF.Graphics_n.Layer.Raise"><command>Raise</command></link>
      and <link
      linkend="MenuItem-OOF.Graphics_n.Layer.Lower"><command>Lower</command></link>
      menus in the <link
      linkend="MenuItem-OOF.Graphics_n.Layer"><command>Layer</command></link>
      menu.  You can also right-click on a line in the Layer List and
      use the pop-up menu, which is identical to the
      <command>Layer</command> menu in the menu bar. The commands and
      their keyboard shortcuts are:
      <itemizedlist>
        <listitem>
          <para>
            <command>Raise</command>
            <itemizedlist>
              <listitem>
                <simpara>
                  <link
                      linkend="MenuItem-OOF.Graphics_n.Layer.Raise.One_Level"><command>One_Level</command></link>
                  (<accel>ctrl-R</accel>)
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  <link
                      linkend="MenuItem-OOF.Graphics_n.Layer.Raise.To_Top"><command>To
                  Top</command></link> (<accel>ctrl-T</accel>)
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  <link linkend="MenuItem-OOF.Graphics_n.Layer.Raise.By"><command>By</command></link>
                </simpara>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>

        <listitem>
          <para>
            <command>Lower</command>
            <itemizedlist>
              <listitem>
                <simpara>
                  <link
                  linkend="MenuItem-OOF.Graphics_n.Layer.Lower.One_Level"><command>One_Level</command></link>
                  (<accel>ctrl-L</accel>)
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  <link
                  linkend="MenuItem-OOF.Graphics_n.Layer.Lower.To_Bottom"><command>To
                  Top</command></link> (<accel>ctrl-B</accel>)
                </simpara>
              </listitem>
              <listitem>
                <simpara>
                  <link
                      linkend="MenuItem-OOF.Graphics_n.Layer.Lower.By"><command>By</command></link>
                </simpara>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
      </itemizedlist>
    </para>
    <para>
      In normal operation, the Layer List actually doesn't show all of
      the &layers; that are being displayed on the Canvas.  This is
      because there are a lot of auxiliary &layers;, for showing
      selections and other decorations, that would just clutter up the
      list.  These &layers; are called <emphasis>unlisted</emphasis>
      layers, and are indicated by thin nearly invisible horizontal
      lines in the list.  The <link
      linkend="MenuItem-OOF.Graphics_n.Settings.List_All_Layers"><command>List
      All Layers</command></link> command in the <link
      linkend="MenuItem-OOF.Graphics_n.Settings"><command>Settings</command></link>
      menu governs whether or not the auxiliary &layers; are listed.
    </para>
    <para>
      The auxiliary layers are (from top to bottom):
      <itemizedlist spacing="compact">
        <listitem>
          <para>
            <xref
                linkend="RegisteredClass-SkeletonNodeSelectionDisplay"/>
            &#x2014; selected &nodes;
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="RegisteredClass-PinnedNodesDisplay"/>
              &#x2014; <link
              linkend="Section-Tasks-PinNodes">pinned</link> nodes.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="RegisteredClass-MoveNodeDisplay"/> &#x2014;
            &nodes;
            being <link linkend="Section-Graphics-MoveNodes">moved
            manually</link>.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="RegisteredClass-PixelInfoDisplay"/>
            &#x2014; the pixel being interrogated by the <link
            linkend="Section-Graphics-PixelInfo">Pixel Info
            Toolbox</link>.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref
                linkend="RegisteredClass-SkeletonSegmentSelectionDisplay"/>
            &#x2014; selected &sgmts;.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref
                linkend="RegisteredClass-SkeletonIllegalElementDisplay"/>
            &#x2014; <link
            linkend="Section-Concepts-Skeleton-Illegality">illegal
            <classname>Elements</classname></link>.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="RegisteredClass-SkeletonInfoDisplay"/>
              &#x2014; the &node;, &sgmt; or &elem; being interrogated
              by the <link
              linkend="Section-Graphics-SkeletonInfo">Skeleton Info
              Toolbox</link>.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref
                linkend="RegisteredClass-SelectedSkeletonBoundaryDisplay"/>
            &#x2014; the &skel; boundary selected in the <link
            linkend="Section-Tasks-SkeletonBoundaries">Skeleton
            Boundaries</link> page.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref linkend="RegisteredClass-MeshCrossSectionDisplay"/>
            &#x2014; cross sections for data output.
          </para>
        </listitem>
        <listitem>
          <para>
            <xref
                linkend="RegisteredClass-SkeletonElementSelectionDisplay"/>
            &#x2014; selected &elems;.
          </para>
        </listitem>
        <listitem>
          <para>
            A <link
            linkend="RegisteredClass-BitmapOverlayDisplayMethod">bitmap
            overlay/</link> for selected pixels.
          </para>
        </listitem>
        <listitem>
          <para>
            A <link
            linkend="RegisteredClass-BitmapOverlayDisplayMethod">bitmap
            overlay</link> for <link
            linkend="Section-Concepts-Microstructure-ActiveArea">
            Active Areas</link>.
          </para>
        </listitem>
      </itemizedlist>
    </para>
  </section>

  <section id="Section-Graphics-ContourMap">
    <title>The Contour Map</title>
    <para>
      The Contour Map Pane at the right side of the Graphics Window
      displays the contour levels used in contour plots in the Canvas.
      There are two forms for the Contour Map, shown in <xref
      linkend="Figure-ContourMap"/>.  The form on the left is used for
      <link linkend="RegisteredClass-FilledContourDisplay">filled
      contours</link> and other plots that assign (<quote>map</quote>)
      colors to numerical values.  The second form is used for <link
      linkend="RegisteredClass-PlainContourDisplay">contour
      line</link> plots.
    </para>
    <figure id="Figure-ContourMap">
      <title>The Contour Map Pane</title>
      <mediaobject>
	    <imageobject>
	      <imagedata fileref="FIGURES/gfx/contourmap.png" format="PNG"/>
	    </imageobject>
	    <caption>
	      <para>
	        The two forms of the Contour Map.
	      </para>
	    </caption>
      </mediaobject>
    </figure>
    <para>
      The two forms of the Contour Map differ only in their central
      map regions: one form displays a Color Bar, and the other only
      shows a set of lines.  The positions of the colors and lines
      correspond to the numerical values assigned to colors and lines
      in the plot in the Canvas.  The values assigned to the top and
      bottom colors and lines are indicated immediately above and
      below the map (shown as <quote>Full Range</quote> in the figure).
    </para>
    <para>
      Clicking on a color or on a space between two lines
      <emphasis>marks</emphasis> a range of values.  The minimum and
      maximum values in the range are shown in the boxes right below
      the Full Range minimum.  The button marked <guibutton>Clear
      Mark</guibutton> simply removes the mark from the map.
    </para>
    <para>
      Several aspects of the Contour Map display may be controlled in
      the <link
      linkend="MenuItem-OOF.Graphics_n.Settings"><command>Settings</command></link>
      menu.  A PDF or PNG image of the Contour Map may be saved to a
      file with the <link
      linkend="MenuItem-OOF.Graphics_n.File.Save_Contourmap"><command>Save
      Contourmap</command></link> command in the <link
      linkend="MenuItem-OOF.Graphics_n.File"><command>File</command></link>
      menu.
    </para>
  </section>

  <section id="Section-Graphics-Time">
    <title>Setting the Time</title>
    <para>
      A &mesh; can store many sets of &field; values at different
      <link linkend="Section-Concepts-Mesh-Field">times</link>.  The
      &mesh;'s current time is the time of its latest stored data set,
      and is displayed on the <link linkend="Section-Tasks-FEMesh">FE
      Mesh</link> and <link
      linkend="Section-Tasks-Solver">Solver</link> Pages.  The
      Graphics Window, however, can display &mesh; data at any time
      between the initial time and the current time.  Thus each
      Graphics Window has its own time which may be different from the
      &mesh; time and the time of other Graphics Windows.  The Time
      Controls (<xref linkend="Figure-TimeControls"/>) at the top of
      the Canvas determine which data set to display.
    </para>
    <figure id="Figure-TimeControls">
      <title>Graphics Window Time Controls</title>
      <mediaobject>
	<imageobject>
	  <imagedata fileref="FIGURES/gfx/timecontrols.png" format="PNG"/>
	</imageobject>
	<imageobject>
	  <imagedata fileref="FIGURES/gfx/timecontrols.eps" format="EPS"/>
	</imageobject>
      </mediaobject>
    </figure>
    <para>
      Layers that display time-dependent content all have a parameter
      named <varname>when</varname>.  Only &layers; for which
      <varname>when</varname> is set to <link
      linkend="Object-Placeholder-Time"><guilabel>&lt;latest&gt;</guilabel></link>
      will be affected by the window's time setting.  Layers that have
      an explicit time, or whose time is set to <link
      linkend="Object-Placeholder-Time"><guilabel>&lt;earliest&gt;</guilabel></link>
      display &mesh; data at their assigned time.
    </para>
    <para>
      The buttons on the left side marked with arrows change the time
      to the previous or next time stored in the &mesh; or &meshes;
      displayed in the window.  The slider in the middle allows the
      time to be changed continuously between the oldest and newest
      times.  When the slider is not set to a stored time, the
      &fields; in the &mesh; are interpolated to the selected time,
      and the displayed quantities are computed from the interpolated
      values.
    </para>
    <para>
      The text box on the right side of the controls displays the
      Graphics Window's current time.  The time can be changed
      directly by typing a number into the box and hitting
      <userinput>return</userinput>.  As with the slider, the data
      will be interpolated if the time entered does not correspond to
      a stored time.
    </para>
    <para>
      When a &mesh; is being <link
      linkend="Section-Concepts-Mesh-Solving">solved</link> and the
      <link linkend="RegisteredClass-GraphicsUpdate">Graphics
      Update</link> is <link
      linkend="Section-Tasks-ScheduledOutput">scheduled</link>, the
      time control and the graphics window always display the latest
      time.  Similarly, when the Window is being <link
      linkend="MenuItem-OOF.Graphics_n.File.Animate">animated</link>,
      the Time Controls display the animation time.
    </para>
  </section>			<!-- Setting the Time -->

  <section id="Section-Graphics-Toolboxes">
    <title>Toolboxes</title>
    <para>
      The Toolboxes reside in the pane at the left side of the
      Graphics Window.  They control how &oof2; responds to mouse
      clicks on the Canvas.  All &oof2; commands that rely on the
      location of a mouse click have a GUI representation in a
      Toolbox.
    </para>
    <para>
      The different Toolboxes each have their own function.  The
      Toolbox Chooser in the Graphics Window switches from one Toolbox
      to another.
      <itemizedlist spacing="compact">
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-Viewer">Viewer Toolbox</link>
	        zooms the Canvas in and out.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-PixelInfo">Pixel Info
	        Toolbox</link> displays information about individual
	        pixels in a &micro; or &image;.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-PixelSelection">Pixel
	        Selection Toolbox</link> contains methods for selecting pixels
	        in a &micro;.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-SkeletonInfo">Skeleton
	        Info Toolbox</link> displays information about &skel;
	        components.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link
	        linkend="Section-Graphics-SkeletonSelection">Skeleton
	        Selection Toolbox</link> selects components of a &skel;.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-MoveNodes">Move Nodes
	        Toolbox</link> allows &skel; &nodes; to be repositioned
	        manually.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-PinNodes">Pin Nodes
	        Toolbox</link> <link
	        linkend="Section-Concepts-Pin">pins</link> &nodes;
	        manually.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-MeshInfo">Mesh Info
	        Toolbox</link> displays information about &mesh; components,
	        and launches the Mesh Data tool for evaluating <link
	        linkend="Section-Output"><classname>Outputs</classname></link>
	        at points.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
	        The <link linkend="Section-Graphics-CrossSection">Mesh
	        Cross Section Toolbox</link> defines a <link
	        linkend="RegisteredClass-CrossSectionDomain">cross
	        section</link> of a &mesh;, along which output values can
	        be computed.
	      </para>
	    </listitem>
      </itemizedlist>
      The following sections describe each Toolbox in detail.
    </para>

    <!-- TODO: Why doesn't the Next button on the Toolboxes page go to
         the first toolbox page?  It goes to the Auxiliary Windows
         page, as does the Next button on each Toolbox page. -->

    &TBviewer;
    &TBpixelinfo;
    &TBpixelselection;
    &TBskelinfo;
    &TBskelselection;
    &TBmovenodes;
    &TBpinnodes;
    &TBmeshinfo;
    &TBmeshcs;
  </section>                    <!--Section-Graphics-Toolboxes -->

</chapter>

<!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("man_oof2.xml" "book" "chapter")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
-->
