<!-- 
  $RCSfile: fix_illegal.xml,v $
  $Revision: 1.2 $
  $Author: langer $
  $Date: 2009-10-16 22:11:40 $

  This software was produced by NIST, an agency of the
  U.S. government, and by statute is not subject to copyright in the
  United States.  Recipients of this software assume all
  responsibilities associated with its operation, modification and
  maintenance. However, to facilitate maintenance we ask that before
  distributing modified versions of this software, you first contact
  the authors at oof_manager@ctcms.nist.gov.
-->

  <para>
    <classname>FixIllegal</classname> is a <xref
    linkend="RegisteredClass-SkeletonModifier"/> that fixes <link
    linkend="Section-Concepts-Skeleton-Illegality">illegal</link>
    &skel; &elems;.
  </para>
  <para>
    Excluding paranormal alien interventions, <link
    linkend="RegisteredClass-FixIllegal">illegal elements</link> are
    only generated by moving &nodes; manually with the <link
    linkend="Section-Graphics-MoveNodes">Move Nodes toolbox</link>.
    Illegal elements are <emphasis>BAD</emphasis>, so they should be
    removed immediately.
  </para>
  <para>
    <classname>FixIllegal</classname> fixes an &elem; by moving one or
    more of its &nodes; to the average position of its neighboring &nodes; 
    In many cases, it is sufficient to fix an &elem; by applying this
    smoothing procedure to the offending &nodes;, namely those &nodes; located
    at corners that subtend interior angles greater than
    180 degrees or less than 0 degrees (for quadrilaterals, illegal elements
    include those that have non-convex geometries). However, this
    smoothing procedure may not work when the corner angle is very close
    to zero. In this case, the &nodes; at other corners should be moved as well.
    Each move is ultimately accepted or rejected solely by
    whether or not it reduces the number of illegal &elems; in the
    vicinity of the &node;.
  </para>
  <para>
    <xref linkend="Figure-legal"/> shows a &skel; that gives a pretty
    good representation of the underlying &micro;.  <xref
    linkend="Figure-illegal"/> shows the &skel; after a &node; has
    been moved to create two illegal &elems; (shown in red).  The node
    motion is indicated by the arrow in <xref
    linkend="Figure-legal"/>. <xref linkend="Figure-rehabilitated"/>
    shows the &skel; after <xref
    linkend="RegisteredClass-FixIllegal"/> has been applied.  Notice
    that although there are no illegal &elems;, the &skel; is no
    longer such a good representation of the &micro;.  This is because
    <classname>FixIllegal</classname> is a brutal technique: it pays
    no attention to &elem; <link
    linkend="Section-Concepts-Skeleton-Homogeneity">homogeneity</link>
    or <link linkend="Section-Concepts-Skeleton-Shape_Energy">shape
    energy</link>.
  </para>
  <figure id="Figure-legal">
    <title>A Legal Skeleton</title>
    <mediaobject>
      <imageobject>
	<imagedata fileref="FIGURES/fixillegal/legalarrow.png" format="PNG"/>
      </imageobject>
      <imageobject>
	<imagedata fileref="FIGURES/fixillegal/legalarrow.eps" format="EPS"/>
      </imageobject>
    </mediaobject>
  </figure>
  <figure id="Figure-illegal">
    <title>An Illegal Skeleton</title>
    <mediaobject>
      <imageobject>
	<imagedata fileref="FIGURES/fixillegal/illegal.png" format="PNG"/>
      </imageobject>
      <imageobject>
	<imagedata fileref="FIGURES/fixillegal/illegal.eps" format="EPS"/>
      </imageobject>
    </mediaobject>
  </figure>
  <figure id="Figure-rehabilitated">
    <title>A Rehabilitated Skeleton</title>
    <mediaobject>
      <imageobject>
	<imagedata fileref="FIGURES/fixillegal/rehabilitated.png" format="PNG"/>
      </imageobject>
      <imageobject>
	<imagedata fileref="FIGURES/fixillegal/rehabilitated.eps" format="EPS"/>
      </imageobject>
    </mediaobject>
  </figure>
  <para>
    On one pass through the &skel;, <classname>FixIllegal</classname>
    attempts to move each &node; of the troublesome element once,
    choosing the &nodes; in a
    random order. It may not be successful on the first pass, so it
    repeats the process until there are no more illegal &elems;.  If
    it fails to remove all the illegal &elems; after a fixed number of
    iterations,<footnote> <para>Hard-wired to 222, because the exact
    number shouldn't matter too much.</para> </footnote> it will quit
    trying and notify the user.
  </para>

  <!-- Keep this comment at the end of the file
  Local variables:
  sgml-omittag:t
  sgml-shorttag:t 
  sgml-namecase-general:nil
  sgml-minimize-attributes:nil
  sgml-always-quote-attributes:t
  sgml-indent-step:2
  sgml-indent-data:t
  sgml-parent-document:("../../man_oof2.xml" "book" "chapter" "refentry" "refsect1")
  sgml-exposed-tags:nil
  sgml-local-ecat-files:nil
  End:
  -->
